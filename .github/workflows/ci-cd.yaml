name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  checks: write
  pull-requests: write
  contents: read

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important for SonarQube analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar


      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test
        run: |
          ./gradlew test --tests "acceptation.DeterminantCalculatorFeature"
          ./gradlew test

#      - name: Publish JUnit Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v2
#        if: always()
#        with:
#          files: build/test-results/test/*.xml
#          check_name: "JUnit Test Results"
#          comment_mode: always
#          fail_on: "test failures"
#          job_summary: true
#          compare_to_earlier_commit: true
#
#
#      - name: Publish Cucumber Report
#        if: always()
#        uses: deblockt/cucumber-report-annotations-action@v1.7
#        with:
#          access-token: ${{ secrets.GITHUB_TOKEN }}
#          path: "build/reports/cucumber/*.json"
#
#
#      - name: Build project for sonarqube
#        run: |
#          ./gradlew build
#
#
#      - name: SonarQube Scan
#        uses: sonarsource/sonarqube-scan-action@master
#        with:
#          projectBaseDir: .
#          args: >
#            -Dsonar.projectKey=mezenner-ci-cd
#            -Dsonar.java.binaries=build/classes/java/main
#            -Dsonar.java.sources=src/main/java
#            -Dsonar.java.tests=src/test/java
#        env:
#          SONAR_TOKEN: squ_bb61b4f6aa352eb7bb43deac1540f1de2bae69dd
#          SONAR_HOST_URL: https://5fac-129-45-20-38.ngrok-free.app/
#
#      # Check the Quality Gate status.
#      - name: SonarQube Quality Gate check
#        id: sonarqube-quality-gate-check
#        uses: sonarsource/sonarqube-quality-gate-action@master
#        # Force to fail step after specific time.
#        timeout-minutes: 5
#        env:
#          SONAR_TOKEN: squ_bb61b4f6aa352eb7bb43deac1540f1de2bae69dd
#          SONAR_HOST_URL: https://5fac-129-45-20-38.ngrok-free.app/ #OPTIONAL
#
#
##
#      - name: Build
#        run: |
#          ./gradlew jar
#          ./gradlew javadoc
##
#      - name: Archive artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: build-artifacts
#          path: |
#            build/libs/*.jar
#            build/docs/javadoc/
##
#      - name: Deploy
#        run: ./gradlew publish
#
      - name: Send Email Notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: lf_mezenner@esi.dz
          password: wzuz lpfj afkf iqlx
          from: lf_mezenner@esi.dz
          subject: ${{ job.status == 'success' && 'Deployment Success - Project mezenner-ci-cd' || 'Pipeline Failed - Project mezenner-ci-cd' }}
          to: faresmezenner@gmail.com
          body: ${{ job.status == 'success' && 'The deployment for the project mezenner-ci-cd was successful.' || 'The GitHub Actions pipeline for project mezenner-ci-cd has failed. Please check the logs for more details.' }}

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          channel: '#tp-jinkins'
        env:
          SLACK_WEBHOOK_URL: https://hooks.slack.com/services/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